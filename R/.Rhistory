name <- "phy"
identical(name, "phy")
identical(name, "phi")
if(identical(name, "gg")) {
if(!igraph::is.igraph(para)){
stop("'gg' must be an igraph!", call.=FALSE)
} else if (is.null(para$intnodes)){
stop("'gg' must be created by phylo2igraph()
or hclust2igraph()!", call.=FALSE)
}
} else if(identical(name, "theme")){
if(!is.singleInteger(para) || para > 5 || para < 1){
stop("'theme' must be an integer ranging from 1 to 5!",
call.=FALSE)
}
} else if(identical(name, "cleanalias")){
if(!is.singleLogical(para)){
stop("'cleanalias' must be a logical value!", call.=FALSE)
}
} else if(identical(name, "obj")){
if(!is(para, "RedPort")){
stop("'obj' must be a RedPort object created by
RedeR::RedPort()!", call.=FALSE)
}
} else if(identical(name, "phy")){
if(!is(para, "phylo")){
stop("'phy' must be a 'phylo' object!", call.=FALSE)
}
}
para <- "phylo"
##This function is used for argument checking
tal.checks <- function(name, para){
if(identical(name, "gg")) {
if(!igraph::is.igraph(para)){
stop("'gg' must be an igraph!", call.=FALSE)
} else if (is.null(para$intnodes)){
stop("'gg' must be created by phylo2igraph()
or hclust2igraph()!", call.=FALSE)
}
} else if(identical(name, "theme")){
if(!is.singleInteger(para) || para > 5 || para < 1){
stop("'theme' must be an integer ranging from 1 to 5!",
call.=FALSE)
}
} else if(identical(name, "cleanalias")){
if(!is.singleLogical(para)){
stop("'cleanalias' must be a logical value!", call.=FALSE)
}
} else if(identical(name, "obj")){
if(!is(para, "RedPort")){
stop("'obj' must be a RedPort object created by
RedeR::RedPort()!", call.=FALSE)
}
} else if(identical(name, "phy")){
if(!is(para, "phylo")){
stop("'phy' must be a 'phylo' object!", call.=FALSE)
}
}
}
